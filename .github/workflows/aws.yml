# This workflow will build and push a new container image to Amazon ECR
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of `ECR_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `aws-region` in the workflow below with your repository's region.
# some
on:
  push:
    branches: [production]
  pull_request:
    branches: [production]

name: Node Project `Leviticus` CI on ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: test
        env:
          some: value
        run: |
          # Test the project
          npm install
          npm run test --if-present

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 550586462614.dkr.ecr.eu-central-1.amazonaws.com
          ECR_REPOSITORY: leviticus
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR 
          docker build  -f ./docker/Dockerfile.production -t leviticus . 
          docker tag leviticus:latest 550586462614.dkr.ecr.eu-central-1.amazonaws.com/leviticus:latest 
          docker push 550586462614.dkr.ecr.eu-central-1.amazonaws.com/leviticus:latest
          echo "::set-output name=image::550586462614.dkr.ecr.eu-central-1.amazonaws.com/leviticus:latest"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition leviticus --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: leviticus
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: leviticus
          cluster: sevi-production
          wait-for-service-stability: true
